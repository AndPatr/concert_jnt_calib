XBotInterface:
 urdf_path: $(rospack find modularbot)/urdf/ModularBot.urdf
 srdf_path: $(rospack find modularbot)/srdf/ModularBot.srdf
 joint_map_path: $(rospack find modularbot)/joint_map/ModularBot_joint_map.yaml

ModelInterface:
  model_type: RBDL
  is_model_floating_base: true

# hal
xbotcore_device_configs:
    sim: $(rospack find modularbot)/config/hal/ModularBot_gz.yaml
    dummy: $(rospack find modularbot)/config/hal/ModularBot_dummy.yaml
    ec_imp: $(rospack find modularbot)/config/hal/ModularBot_ec_all.yaml
    ec_idle: $(rospack find modularbot)/config/hal/ModularBot_ec_all.yaml

xbotcore_threads:
    rt_main:  {sched: fifo , prio: 60, period: 0.001, core_id: 0}
    nrt_main: {sched: other, prio: 0 , period: 0.005}

# plugins
xbotcore_plugins:

    ros_io: {thread: nrt_main, type: ros_io}

    ros_ctrl: {thread: nrt_main, type: ros_control}

    homing:
        thread: rt_main
        type: homing

    ec_ros: {thread: nrt_main, type: ec_ros}

    # gcomp_example:
    #     type: gcomp_example
    #     thread: rt_main
    #     params:
    #         enabled_chains:
    #             value: [chain_E]
    #             type: vector<string>

    traj_replayer:
        thread: rt_main
        type: calib_traj_replayer_rt
        params:

            verbose: {value: false, type: bool}

            traj_execution_time: {value: 600.0, type: double}

            approach_traj_exec_time: {value: 10.0, type: double}

            jnt_cal_yaml: {value: $PWD/jnt_cal_concert.yaml, type: yamlfile}

            force_iq_from_topic: {value: true, type: bool}

# global parameters
xbotcore_param:
    /jm/tx_filter_autostart: {value: true, type: bool}
    /jm/tx_filter_cutoff: {value: 2.0, type: double}
